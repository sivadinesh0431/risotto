name: CI/CD Pipeline and Deployment

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: Build site
        run: hugo

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/portfolio:latest

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: 'latest'

      - name: Run tests
        run: hugo --templateMetrics

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy via SFTP
        uses: wlixcc/SFTP-Deploy-Action@v1.2.1
        with:
          username: ${{ secrets.SERVER_USER }}
          server: ${{ secrets.SERVER_HOST }}
          port: 22 # You can modify the port if necessary
          ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
          local_path: ./* # default is ./*
          remote_path: /var/www
          args: '-o ConnectTimeout=5'

      - name: SSH and deploy Docker container
        uses: appleboy/ssh-action@v0.1.1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
            docker stop portfolio || true
            docker rm portfolio || true
            docker run -d --name portfolio -p 80:80 ${{ secrets.DOCKER_USERNAME }}/portfolio:latest
